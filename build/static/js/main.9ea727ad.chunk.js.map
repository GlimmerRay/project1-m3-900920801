{"version":3,"sources":["components/ArtistIdEntryPage.js","components/RandomSongPage.js","components/LoginPage.js","components/SignUpPage.js","App.js","reportWebVitals.js","index.js"],"names":["ArtistIdEntryPage","props","useState","artistIds","setArtistIds","newId","setNewId","validIds","setValidIds","invalidIds","setInvalidIds","canSubmit","setCanSubmit","a","display","id","push","length","className","displayValidIds","displayInvalidIds","idListItems","key","displayArtistIds","type","onChange","e","target","value","onClick","headers","method","body","JSON","stringify","username","fetch","then","response","json","error","console","log","data","setReturnData","disabled","RandomSongPage","previewUrl","setPreviewUrl","imgUrl","setImgUrl","artistName","setArtistName","trackName","setTrackName","lyricsUrl","setLyricsUrl","fetchRandomSong","setArtistData","useEffect","src","width","href","LoginPage","setUsername","loggedIn","setLoggedIn","signUpPage","setSignUpPage","SignUpPage","switchTologinPage","setSwitchToLoginPage","switchToRandomSongPage","handleResponse","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ea727ad.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction ArtistIdEntryPage(props) {\n\n    const [artistIds, setArtistIds] = useState([])\n    const [newId, setNewId] = useState('')\n    const [validIds, setValidIds] = useState([])\n    const [invalidIds, setInvalidIds] = useState([])\n    const [canSubmit, setCanSubmit] = useState(false)\n\n    function displayArtistIds() {\n        const idListItems = []\n        var key = 0\n        for (var id of artistIds) {\n            idListItems.push(<li key={key}>{id}</li>)\n            key = key + 1\n        }\n        return <>\n            <ul className='new-id-list'>{idListItems}</ul>\n        </>\n    }\n\n    async function addId() {\n        if (!canSubmit) {\n            setCanSubmit(true)\n        }\n        setArtistIds([...artistIds, newId])\n    }\n\n    function updateNewId(e) {\n        setNewId(e.target.value)\n    }\n\n    function submitIds() {\n\n        const headers = {\n            method: 'POST',\n            body: JSON.stringify({\n                'artist_ids': artistIds,\n                'username': props.username\n            })\n        }\n\n        setArtistIds([])\n        setNewId('')\n        setCanSubmit(false)\n\n        fetch('/save', headers)\n            .then(response => response.json(), error => console.log(error))\n            .then(data => setReturnData(data), error => console.log(error));\n\n\n    }\n\n    function setReturnData(data) {\n        setValidIds(data['valid_ids'])\n        setInvalidIds(data['invalid_ids'])\n    }\n\n    function displayValidIds() {\n        var display = []\n        for (var id of validIds) {\n            display.push(<li>{id}</li>)\n        }\n        if (display.length > 0) {\n            return <p>Saved the following ids: <ol className=\"valid-id-list\">{display}</ol></p>\n        }\n    }\n\n\n    function displayInvalidIds() {\n        var display = []\n        for (var id of invalidIds) {\n            display.push(<li>{id}</li>)\n        }\n        if (display.length > 0) {\n            return <p>These ids were invalid: <ol className=\"invalid-id-list\">{display}</ol></p>\n        }\n    }\n\n    return <>\n        <div>\n            {displayValidIds()}\n            {displayInvalidIds()}\n            {displayArtistIds()}\n            <input type=\"text\" onChange={updateNewId} value={newId}></input>\n            <button onClick={addId}>Add New Artist</button>\n            <button onClick={submitIds} disabled={!canSubmit}>Submit</button>\n        </div>\n    </>\n}\n\nexport default ArtistIdEntryPage;","import React, { useState, useEffect } from 'react';\nimport ArtistIdEntryPage from './ArtistIdEntryPage.js';\n\nfunction RandomSongPage(props) {\n\n    const [previewUrl, setPreviewUrl] = useState('')\n    const [imgUrl, setImgUrl] = useState('')\n    const [artistName, setArtistName] = useState('')\n    const [trackName, setTrackName] = useState('')\n    const [lyricsUrl, setLyricsUrl] = useState('')\n\n    const headers = {\n        method: 'POST',\n        body: JSON.stringify({\n            'username': props.username\n        })\n    }\n\n    useEffect(() => { fetchRandomSong() }, [])\n\n    function fetchRandomSong() {\n        fetch('/random-song', headers)\n            .then(response => response.json(), error => console.log(error))\n            .then(data => setArtistData(data), error => console.log(error));\n    }\n\n    function setArtistData(data) {\n        setPreviewUrl(data['preview_url'])\n        setTrackName(data['track_name'])\n        setArtistName(data['artist_name'])\n        setImgUrl(data['img_url'])\n        setLyricsUrl(data['lyrics_url'])\n    }\n\n    return <>\n        <p>Logged in as: <span className=\"username\">{props.username}</span></p>\n        <ArtistIdEntryPage username={props.username} />\n        <img src={imgUrl} width=\"400px\"></img>\n        <p>Artist name: {artistName}</p>\n        <p>Track name: {trackName}</p>\n        <p><a href={previewUrl}>preview</a></p>\n        <p><a href={lyricsUrl}>lyrics</a></p>\n        <p><button onClick={fetchRandomSong}>Load New Song</button></p>\n    </>\n\n}\n\nexport default RandomSongPage;","import React, { useState, useEffect } from 'react';\nimport SignUpPage from './SignUpPage.js';\nimport RandomSongPage from './RandomSongPage.js';\n\n\nfunction LoginPage() {\n    const [username, setUsername] = useState('');\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [signUpPage, setSignUpPage] = useState(false);\n\n    function updateUsername(e) {\n        if (!loggedIn) {\n            setUsername(e.target.value)\n        }\n    }\n\n    function login() {\n\n        console.log('HI????')\n\n        const headers = {\n            method: 'POST',\n            body: JSON.stringify({ 'username': username })\n        }\n\n        fetch('/login', headers)\n            .then(response => response.json(), error => console.log(error))\n            .then(data => setLoggedIn(data['login_successful']),\n                error => console.log(error));\n    }\n\n    function switchToSignUp() {\n        setSignUpPage(true)\n    }\n\n    if (loggedIn) {\n        return <RandomSongPage username={username} />\n    } else if (signUpPage) {\n        return <SignUpPage />\n    } else {\n        return <>\n            <h1>Login Page</h1>\n            <input type='text' onChange={updateUsername} />\n            <button onClick={login}>Login</button>\n            <p>Need an account?\n                <button onClick={switchToSignUp}>Sign Up</button>\n            </p>\n        </>\n    }\n\n}\n\nexport default LoginPage;","import React, { useState } from 'react';\nimport LoginPage from './LoginPage.js';\nimport RandomSongPage from './RandomSongPage.js';\n\n\nfunction SignUpPage() {\n    const [username, setUsername] = useState('')\n    const [switchTologinPage, setSwitchToLoginPage] = useState(false)\n    const [switchToRandomSongPage, setSwitchToRandomSongPage] = useState(false)\n\n    function updateUsername(e) {\n        setUsername(e.target.value)\n    }\n\n    function signUp() {\n\n        console.log(username)\n\n        const headers = {\n            method: 'POST',\n            body: JSON.stringify({ 'username': username })\n        }\n\n        fetch('/signup', headers)\n            .then(response => response.json(), error => console.log(error))\n            .then(data => handleResponse(data), error => console.log(error));\n    }\n\n    function handleResponse(data) {\n        console.log(data)\n        setSwitchToLoginPage(true)\n    }\n\n    function switchToLogin() {\n        setSwitchToLoginPage(true)\n    }\n\n    if (switchTologinPage) {\n        return <LoginPage />\n    } else if (switchToRandomSongPage)\n        return <RandomSongPage />\n    else {\n        return <>\n            <h1>Sign Up Page</h1>\n            <input type='text' onChange={updateUsername} />\n            <button onClick={signUp}>Sign Up</button>\n            <p>Already have an account?\n                <button onClick={switchToLogin}>Login</button>\n            </p>\n        </>\n    }\n}\n\nexport default SignUpPage;","import './App.css';\nimport SignUpPage from './components/SignUpPage.js'\nimport LoginPage from './components/LoginPage.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <LoginPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}